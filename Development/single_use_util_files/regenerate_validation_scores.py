import data_prep_and_model_training as FG_model_training
import additional_reporting_and_model_trading_runs as FG_additional_reporting
from datetime import datetime, date, time
import pickle
import os
from config import global_strptime_str, global_strptime_str_filename, global_exclusively_str, global_precalculated_assets_locations_dict, global_financial_history_folder_path, global_error_str_1, global_financial_history_folder_path, global_df_stocks_list_file, global_random_state, global_strptime_str_2, global_index_cols_list, global_input_cols_to_include_list, global_start_time, global_financial_history_folder_path
import tensorflow as tf
tf.config.set_visible_devices([], 'GPU')

list_of_model_subfolder_names = ["dc2f09ff8db8e1b6067b8817991986cda90a6b65dc212a4ef91ca095bf50c5b9", "7a384305c33cda168276778995d1a554af678012f7e2a920ed827e74e70aed10", "1019ba24d50853a6a0aef8c2c0352bb8aaef9735012ac7cac0ce0a0708ccfe78", "03685052fc3e5c807ab54f791793870555f22aa2b3a111451a4c3a7abee0c0d4", "d8f96bcd0f329dd99412e5989966a881ca93ca50a10b772ed6e7439e024863f7", "50e50d2239cde0dc83cab57df658ba011d6e32d9e5d2bf471755c6810deb8352", "d14ca2ac13f8120916c960e9452a9ce79a12f0153606fef54a96f3d468bffc0a", "abb06c9977dd19712c8caa2772724468c43293d9dac08896f9413b164b7edb93", "93cd548e00c581dc3f4a086c44e005e87a47b25d3e530ab1d51cd3861c5d647f", "b13d3e41573925a8ca3d01f455f7d8a742ab241303021c3edc70ca5cf23785bc", "20bc996d0ab966c79bcb214de15ed17ad0f66a65e19f518e9695a51559a71b42", "c83bc1070e0067e081f4731abb2e8f60a48a713b53ebfd71b3800236544c770d", "7348f5400e62e5ef4341ec9a4b9880d6a0eb157f55448dfc7a976cbe5f796e35", "94bdde9d4d3792e7ef7aa5e348668c12784fcec58911365b73c7966bfee06d0b", "1363b6376e0a95b03fde78dc559c4467d470d5fe83c49d7a3e56054078a4e7c8", "0629ef5162363d1bac9a316d846d250f780e5e20eefadffaf2dff92c4535d742", "c56590e30704e9c29624d532e6026c785c9b5d91046729dcfa44722205f919d5", "d0aa70dce44cbddac4e82fb5747438e27add9aa5975af8e0b8aae22800d5c6d9", "0e119a3ce7a9243e5f8728e4af128fb642ef1bfcc92f227de5176891967ff9a5", "05b9fad50e40efffb4d9be78e5c16dc23d97384dfc8186420b7c8ba11bf6ed8a", "7b443a71910c7a1c35628be60d1e97aaf34b8d04f7225200722fdcfc3232c2e6", "57421bcb640295ee7090731f98cb541426ab0ed8c7f67172856c65832b0eaed5", "d8e5d23702377334027cc07da486827f7782c696543f586ac961acc9f3bb7136", "964981d6af03bc93f33ebd47ecac7b2783d0b41a2a0fa9afa4d4b3b1bd28c1c6", "1ed5697ebc3809a5aac3bda996fb74cfd6481a8f621bb285fb3c52c13a9d56f6", "3be7f6db3cfaf78339e5526eb55ad4202813f110add33910c1de04d31ce09659", "215dacf94b8a2e6c4299c2888c78e198460c06fefd2855f22869bb1c8aaf1db5", "dfb17d5b073d46354f34c02da10684d793cc50b63e88d66a49b556a63a1688a2", "13d56f6d8d8b5e2707a1ec817a441b1a330c8780b28b2972c2ae146105ee9403", "905d59ad8c8e678ada26a288f3d83a84b908ffacd3133dbe2ef09ee79553f2e7", "489c0a92926e6ff2e25e4b0b03edfc3fc55e6a8b5cd333f4eb75ab761c185551", "10fea2e7e7207e1a0a500d46b522b4f127387ea94688e90aaa36aa6304b6a4ec", "312092505af45688225a2afc7d306aab454054b6d45b215dbd0b9d0782dd27c1", "dc952cef52792e2b1aa603f3ecd52b79a5d88d578b17180a3bb47c590d054e0c", "e43a111bcd2142f7a0434a7cf6bfa4ce6dcee74738cb021da236e36ee40bdfa4", "907b7b351cb29cabed8e876776fa8a997b20461b65a163966519f26fb43aa61e", "802948ac474abf591c2fa414344dc8116b0a66d1c6b894691fc951e6d54deeb8", "76c73fe81ed29487bacfd0e145907b1cac1e61b5900a971e79c80c816c18cd71", "78296c1de70f714ebf2b051b7952d3befa8108e7a901a06e01c5b905a88b5789", "d014f6a37ec186e7c5d7534b62c3741ffe056de18a728a9f0654fae78ae8c2b6", "ed80959f002e8405858a492fa6b144072be5d30c1183585d42f68773d6976946", "0e5c0c96b8038131286df9c372f3859d594d1ba15084e022a292bbeaab0a9d9f", "11318b0fa2407439d5f0711beb89e747dce58b4c85caf2ee3cfdb829959f5140", "ed3d3ab70a9a3b035623e10a1837a1cc2cd45265029544d0b49685e51da69751", "b48b4a2168ac8f25ebef117b6a5352479478882477daca8c8f3e4bba35ec6013", "d102bf162801e1314249a2777fe3c1a8f4e503b6143fd7da08708c9950406277", "22889f44bf214071235a47d5cb128b3cb86ca936cdba5bff8b3c725d17b362ea", "676f84fe0ea342dc88f02b573e3819fbf4cbd3d91d61e99cf2e4f06bf2370e02", "3b77dc571698f000930803234acdd208b999df3f73ca855808594a08d5f54216", "0eb2ee96dceec2a7f5eadfea95369a3c5037e550246c522980d89551182f2c1c", "e4dd44a8d97f169a6b0fc44dc6635f9a72b9b6d767b8f84c6be27178ebde9b22", "59cc0c484e3da88ef9f4bd0bd145989119c454ac63c7d181ab197095ece81909", "3df29a67b82d1a3d439219c70591ecd183392792ee2a84812e418f3227c538d9", "20b3aaaf5168cb520812b9cc92135273fec12354e0e3dc3e340d306a23e2a45b", "378b83cdba97975d5e7d2708894f205b861af5a9014a06c93e3cec41c05868a3", "bb41830303cb916c46df38491ba3e699f056b3d9875f612d7cf5f308fae657f1", "3531817ff8c85aa52549726da84976aec8047c8423739bb1a63a0a766c9ac21a", "7f38a00f3d714394107505e0046e646e5c6f641f4ee2c41fa15198ca0b2efc90", "200711c1a4ce2a9335763b1075fa0a1ec556f0bd2b6896b5e7eb6830d46cd743", "b62d00d7a713a3bbabe200c63e3c6620db777af4c2949289be21cec497cdb728", "a20c24fdaf8b3bd0523416fc24b17765ec34e003e99608a69ed4aa11fa099017", "b6415f5511b64acaf469dbffa7304fcabc5b4085ac55fd02a03661f359a6eca2", "c7f9b33c0a254365371aa716d1ba35917f9d125b5b16cf95f4b900e8d2266b1d", "af8463b34e81525d7519082e013cf1e13e8595300cd41b4024b9975796e40668", "3ef4cc8a5c756f73c53386f62cefb6068499a829e2f3acf594747901f07ccca0", "00f2992d11fa8f312deb5b5ed18568e5890fdb920ece50dd35fac0b51b0be0af", "7f03cad0f8d31d1e2c4d50b870a173e8c33c57ad8f2e2faab1b7e44718b9ec22", "5272866efd886ab08c06294ebfd7f4f301555c2d9241f2a2f28176ec64129bfd", "7db189604a6b9728c2707365483bf2013cffb1a13bce5f269030d655f4cf43fb", "800ab6ca9dbe00f3ca91d127ec079072c572e04a20979357b7a363b92a9b4a02", "ebb2e8a584a2da17e8840848e066063050f2ca60fe3975b596bf37b51811f4e3", "cc3acb187edba96ebc8a119825bcbf9ca29185203c8cc93d9fae9b1745433834", "37d4d0501eb635e9ec9f7b421dffcf543432f4c98669bd7043d29496b67b7caf", "d8bebafc8c92a3f9ebe9c1f3d55ecfc65b0583056c3328f14de52212965c5072", "21e355368611ee48f099f318a1a47c78fc40e7252678ca19a5f3d70d00de008f", "9760a72a211cb36035437875fe35d4ad0e92549e646f846377c2a4e8464dc165", "bc53309ef0e8bea6b3f2bc05d0aab3cebc62fa881329abf36a9056b7d1d80fe8", "29737bb1fe8229322f6a747292bca844ee93b1b80be7ab5fe65f8f78ffaf2d6b", "27f5d11f1b7e3688d201a75a89c4cfdb348e8a129aa8efc007573432c1f33e6c", "1a28453e29266039da67f694321ce9066ed558b2081b7cbb8324b0a76b9a53e7", "a03f0e8cd34a461483e65673b9b736769cb6c804b404e03146a46dca7f1d6aab", "34513c022a21efd9fefecceba605174c85375687d375797e64fb731f2810f3eb", "67d266686ecc8c1d64a5c6b6e5b374117a8694e363145815121f605fcf9adc46", "b7ced7595764d0600a1b6963bcdd91613bb0568c0378d471f1a0b85921493902", "d4785b0e5c45a1008561214a8fe348e70237c26cff3abe737ba1e1f41187025b", "8659cdbb8a97920570a0bf7953b912c31eac81543cf1ab0d91c867d0a1528e46", "494e5e767299d064b6b60872d8dd440efbecdd4a544dbbc175aacc3657a841c9", "0cf17a1f8e5acad3e8f94f64a12675ef816040f26cfd574ab386a1735cd4d7ad", "da5e38e2742786891c0eaa1075263b0be5c7c130fc7e7fa7f85ef00c00ee2060", "6eda69632a9d561acff6a89a1d671cda4a499a0158e554fb2b305f212d9a8e73", "b89a87b9856b880d9498d3d8382e55101df92395dde365a84caf7cfc3052f57e", "c2619ffc4cc929834ec360124da27530e12243805c369da465c03f4f00f6cbc9", "0900bd96e76e8421190235d9f0bbb01d7d0106e81fe7676060fa7733d8db5074", "cf3ad27d819350cf9a8c4eeb6fb6368118582cc1db649082e1ae2060016024a2", "49b8bb9ca24d39748873e2400d923d3698f8efb69246bd0fea98d0ac70502c8c", "becc5200286cba220f759fbd300bd0c1cf6e1166f35b54ca57cf4756930164f4", "eb0abd3413550d721e4125669fa02ab1168cc987f2831d8ecaa988f9e61149b2", "817866391b7dcf4f0e497f37340ddf5792b27370b0bacddef92b2f149096217d", "587e71bbfaf865a98128a3720dc0c16e1278d0c059ba8320b3192c6560a3b8ba", "827932aaa3c311a648fd2a6d7295821186c1eb2104697c50bb19ff67c2ab4f03", "5a9e29a1b3c20174a31bc52bae78a54dec11918c76fb1d103119d1671f161572", "a9c27c6ada2469f650e84e22a2e02802dfb1d56e560f871b25483f92ef28b919", "ad63efb1ede2e07d5a5975d7750cc426091f02c8c57e9a2999257778d735c06a", "3616f50fecdee37ff1571a41bd2a29ab8154f0ca9bf216d23f792f3acdcf6c3b", "cdf73948c9ac8a51083e311fd8185eea65bce54cc8a437466a3f124ecaadcda7", "7e147b1bb2c1c2f1381717c09d8b5237ed9094f63850053fad571f48fa1d8d95", "511eef6096e5275df870fda999cf7ab81bb23858545f0b2f8399d6dd57619f89", "ea173ae53373aa551be201209425f7fe7fa810642fa68d955da1193ca55938ed", "de018603c8c4c551486938fe8042bdb02884a6c854317118224991d4e388341b", "ae6c1f1659ff4d09e3e0271a87ed36ff035775311d2972ca95249bb7c8213cec", "2c89a0aee51de043f1fa155c9f7b3d97f549922a7d676a40c0f3780303d7d4d4", "d8d67cf4c1efde89374ffff6194f2dbda29dd3f2a9f2d27285a3dacfcf0c7f45", "463abdc64b2c5f75000c7caac258905b85f63b9f7981d25e351cee57e34e400f", "66439d215e3c7af88c1b6dbf8c26461ac3bd3640a60f4aea446429d1fc4e5f01", "a214858cec4ace0b8e72edc6be46c652041e5a46007c4513e9329ff616be067e", "59bf150df25cc718f29993d19351e78e8f7509c926ab32bf7a11f4352c75109e", "e17bb85e4bab4cfb673e7c2b495f23f03a4c04767358fb790f20a5a9eb350d85", "cf07d23daa54d59388c688e4e13cd3755faf11fa0bc77a246975593d7922b322", "2ea82d1a1828bbeb96a238daf3fcf13808ab5203d3d092108a730ca791cfb0bb", "9104184ffc18d2041a01c6d277a5dd2c0f9d30ed683b95c155d2ed8a541b007b", "8d264c7a0247082846e5fa94cd4b2fb48cbba9893e48caa1a7f090f896c2f0cf", "3bb33c3353e7f1142a816a7f5e7026aa7602f0158ba2132f92724a37a1e531fc", "4055693032e42df3bfd33b7d194bc8c2f3b719125440e0e1beab49e1205f8134", "073f74a45720e6a66f3ff740d7b4f53c5fe70dd3d3ac471f4647aa2140d68a59", "969337c5cd891d8306e485f33962ba5f8c895481e6e2bdb69bd7cdecbc0c6587", "48d666401d427bc07ae77b8f1a7e094b0f45886c035dc90c81ad928711f100a2", "769e75911e8833c1ab30d15e9b2ea5a02327cd7e02b829d009f2111a6ae30e8a", "0b22bf47f0fdf78a2ec8557427a80ed30ecd3c08091b497cb8e22909896b5b42", "d9c54b23dc1c4892faea8b3b7cadbed5bb47b340417ea1830395277dddac20c7", "b9ee3f54225d35c4c82418505b5a192afcc341f493dc6cfbb28660b83d2fd8a7", "5896cc512511016dcbb894dfb605866406407ba0374f7e3dbefcebbd057aaad0", "4e595d384f00b7dc1020ea959d37a640c803a8ba3b062a1abed71fced92ce6fe", "c6934030c0dc6566b3bbbe2f3d14c991cdbb25aae4e0101b4eb73a0938413893", "a13e9fda27a16ec61a061bd2243c26cddecfa0e51e929bc87e30e80c592e91b4", "e8e604b500e835f19549a6197b7c2432c372cd05730bf87b29a6905d20986982", "aa76c70e024f776c631dab5ec9bacc3f22217614d4d4f86608cf0659186d593f", "d230a0e329e592b47d2104f44c71c0aafc1f22afe2a1f45a7bd2ffb94bdb200d", "7e43d11cf9cdeb9e95a58a0f15cc8fe5cad410352295a97284e906749e583880", "69fb01d64dd500c9434fc819e01d5723037aea0d07df9db05039c68b025dd267", "360ef6838325d60150969a3a055ec601a45e5a18f4e0f399d851a982e8b3b579", "39fc803bde97a1e2a3441bd91c87bd6903c918b6c996223e0dc6bf464356c66f", "e730c8f94680ab616925899ffe3ed76926e544a5a07c4999732f2feca5066de2", "6df8f4fad6c7fc9ed9a9a2e10dbe086af40d1bd46a9fba113e298a19c388f4ca", "1a768837d4b2c6a58459ab267516f1934a8581c16d94e484cbceff24e1ddf1e2", "994bda2478b1377295188f292111e39d723e00e95e03553c541208582e194aca", "c7025ab59637e0c77ad1c619da632e1b8610ca03f3bb97e0acb56446bb945092", "a7dcdf1f8689e5f9b9277857c800ef32c586b13eb98a4855ab7449029e47a518", "8bfd62613671647b4f59ac02a52e487de2ca66d34cf1c4ea49af2c3de178bb4c", "87dfbda8cd5031c52272b35a2e4bd1f6943fd8a3b07aa904a0c8e35749bd9220", "22b2321903a66eba1e7bcd2a0d4e6cb5105241f07f5d3309e9f212d469fdec08", "21c567e4ed0deb2c3213f9e918dd9d36e5493fb76880df63bc571795dee1f212", "0ccc9053007163a73b9563edf044b244cf55d945a07e2c95d92da2d58a4e2dea", "7861a59ab3de6a08b36a69a95c3389935cb848198f8211888da55faab65d3fb8", "6a14cc92b3abd31e9ef14e06bad3d9e45fd09de69895a1099f8c5755a1bc6a28", "0606ee804c163f648be97efd6fa81a5777ad0c140193996ea450fdb99f65e966", "74db1d17a9e4df827e32ee4af7e92aa9aef3390bb7885c8d262ed9e0397093dc", "5452496fdb5aabc87bc7078c4598c9f1d55b7599a078009cbf87b6649666a4db", "5e451dd9c129563c147b43b9e940e0e82e5411bd4561876821db8b1d09d27fd3", "1274a708865608e859e8770c847cfcf78db265009509e4435707dd7e4f49d611", "14655ecb9941d3354a14f9c3b606618575ca480e61fc3954ffdd938b6eda2d5e", "0b3eee556a7e8dd758e07e9c5c2e42bd93d67a0061c9277180df23c0427ca604", "54b73f230641d0b9a0e4cc0eed4c498b235f8a95deafd2badfd8616fc00f6269", "3ee270554c4fbe8763572bb6e5b01a1b4bf0cc268306c1779ad98cae18f2a1e4", "e377e6ef4cb4916cfcf5a080fc3c92545bd71ddf2d60fa797ca5babc620cf091", "995617f01bd7e35266273349b1c5971271cae00e9d84ca192b2811d010302f37", "c9587d7ae4ac50365159466e8f92441acc3598ca48ac03b270f04866eb5f8f40", "5736345bfbbdbc0a0f4b960d8088836ff3bd2f164dc0a00a2b36402fb7543d21", "c87b8d5c7902a3eb74e3bc3775e0ea7feed42f164dcb0a2e28d72dd713d9e228", "f5313da3c57efb7d268e0822d9b853da34d59377bd6eaedca1658b08bc6b0551", "6ff972470adc4ffe4081c21be9a09bc8c6ce713994bf03296bfb5fa43037dff4", "e552f43a1cba6d0f34924ebf0acbf1f5dec2c36cc2aca13dfe689aac26797d7d", "e228b8be775bd32d96bbf2ac858eb8ec2d5930bef8e76740f6a32ab47e05186c", "a52e0ecef522f279109a74fa1f473c8a825cd587576b4662b55b65351c0b48ee", "fac033b2f741e253d2fee7ec46f8800fcb9053a1fc4b614171f944b1807dc1ef", "f1545f45a2dc98fce539e3c9a148f08bd46179018f176494d4880c9280248a3b", "8987e44340dbae2b69c0ae1efe9fc904c1253e6ed99a65caf8e4b2c17e090c5f", "d6e5dc0065e6e5319a5e2fa39ab23aab8130437533bfce3a993ccdbce2d9baff", "9eb7d0ed201473fa7000c6e8fa38e2e13319818e0fdaa69c0f4679204336a9e2", "27fb613e24655d0de1fa3b6056c8e3504aa96c34b60800171cda6f1296053794", "0c9a4082d8e674256090191e3ee1c2e1fa5b35de041f767dbcee4de406f46270", "c2d1164a3afc39d699b5765acaf735322bedd516e11278f8174972d421fb45dd", "9c27c767a6db00d86b79cc38e56f5ee794c21be1b8c4d33f84830a40b1bd7c65", "85005fb35513948463b1358e92df2f8b990682b5f6c05a3f33a03850b0c53c35", "88a5df24e2258e1e7ccdbd5d1c54d37a95255b0f698cd38b1cc0c6a17dbbdce6", "6dd4d090db239653729149d532723d949e5660df25965fc7c9791a9377e8d517", "ba49962d7b63440a05aeb4260341fd3abb56647daa97936f0e8337d743902220", "812b13a188a726358b5a638e5767fddbb065b10ebe7d1c487afb71bb0e6e0179", "0762a3701f0fab56e51dc6dcd1a87784415c70b1d734380837ce00268527ddc6", "9ee048ddedc023d1d9e0e0efec5a076224b2cd0b49ed32ad10de225a688ab45d", "bfda979a4f70690edc928158aee0a984be7a1f04dfb62e1c05b7e3b3809a04f2", "4bc2fa313159752416436bafc3efb1e8decfb560989e308966a3d3241fca0b8d", "d1d0fae13cf4ecce56646e51de72e0136e2e41dffc19418c895bbde886fb46cd", "91af548336083b0863257fa41fe595384afd325b7b16c57b62103a8833281623", "2d7d2c2a08f15cfcdd0375020099ac5cbe1840b1d759cc5eb17c81731e1d8d5b", "ca5dc1b5b0af2d43bf05fe1544b4bbbc7fef69a49d17600963ec500fcd1c91ea", "bde4257eb00196aa68fa9ece73d08876585410bd750fc34f6e0cda3f930d4a2b", "0af10c4735b6ec6e1da173188afc5c61882708e4e8c032fbb00729101be146b5", "1cfd0eb9238de0b087b5c2cb53bcdbd81216d2f8701f6c395110f614fbc12d52", "ceb4fb1a5f69f670f04f4a154d93637b7c65c0f6b2ae1ea506390ad03738cd21", "b8d50ae1200663e6ae8b5faa60f779df810f6b6351fe402823fcb5e80a9b4edb", "d99b69c2da1d2c4992e010d549f52fbbbf7486bd8170fc5c850043aa01720473", "e27754098ed95c5c8c87f944f3ea54803dd2b688ba6c016f1abbc76b28fab454", "968c2788965d6ed445bbbd6c0b606799246a0249581dee62521f5a8761e47abc", "3acbfd48b63047ed0fbc6ff06ca4c6a2a4856f62bfbb3ee20b2361f7d82b0ce4", "65653c364c20aeb579b6368e840b0062f303dd42ad184d45e04430dc6d3416de", "9d2ca5ae847afe88c7f97b5678852e3f7714caec9c52307233174be2b202c25a", "95c0196ae1c28f7118f7d3f24563f906b6b86dc72d24bcde866eb44110394fcf", "1481b930310d3a0bd80485f976c35ff5d01f47cf5bd1f76a9aa945fc7c9082c9", "7ee68637ce04504e07355a16c4dd6f0ed831576580b8bb64a62f46012bd19ebd", "afcc1a1da77475d63a535b1d28988891158f90e775fc13a4dd03311c98f06621", "fb1feae5660d064d0806ae07dc33b13de40ebd6a124e6df08c1797c88e266a89", "639e4eb681e1c29352fb9d1135c368e2bdfbab6d46a7850f2464ea82c2e8b26f", "e5dc081dabc29dc1badb4857911f6d77edb2ead4c496b471e656f1baf187a1b7", "7f8ae9ec3874786c1ae0965085eddfaf470c3181c034c492ccec0d7b1656fa41", "4645ac02fc076b270738f62bdfa5cc436e2cde12df21417283d0f8730c72dc4d", "55fd8744bbc5e2dc766a832ec4809e43acb7da1ed2bb9344a356ec76ce0ae5b2", "925a78babb5c64e201b3e7d73a8bd7ce1dc9334c8a16025551b33cb2a677c833", "72fa8afcd2004b7445744f1be623cedc1a473cb371768c816c4211b9717e1c76", "bed587729137361458387e9890cce8918848a8101d844e8420ffefb46e001698", "dadd7012f84ce47be655e6438c043b38d9f1389b9a9c4c10e3ec49cd2bc05238", "eb638983a8872ebe1dd2e83c2ccbdd5a6c8b2c65eeb808db6e4b54d2340ea9f7", "4b47678bb55c2b65ec55ae8d4542b78d70f43d6267afada0ee466ebcc7049eac", "98f8ae7c3ab513f3444eef95e23776db934bbc46423ba9ea5a391d0d304edaa3", "1980b78060b27ab6c98a6ae246e2ab778ae1261596f0b15accebe6a97ee6e382", "94cb10e42bec32b1cd2606e1d8abf58642c112f463829d1771ba1a152073affb", "dc438f0efc9c6eb0df977d1a9aa86eaacca0e2a3a5e76fce05405d8e5548dfa0", "6db242adc500bbbd4d04a334f40d99bc46d58aa0277705e09dcd76b0ac26fa22", "7e72aacebf229543fe8d6f1413a3c7f740cdc2ef9d8ba50cd9cca86a1bc5fdae", "b432233e9cc5a8316e56aeba9a3efb21a84a5be1d1066161dbeea6211245f1d2", "d891fd88d5bd5a63b301bd31f0e3e109513d6ae721c7e5c5517abfb8fe32ce05", "25441e0c22c5068386d63ab418fa1120b4c5eca010f1c1154ff4fba201c733e0", "41d1fd2c96edaed4ab561dec42a7780eb66e397225408974f32372d25c0c794e", "62eafb5752b817a63dbac26c0a46345e0b8268a3911189d677da604d8ddde24f", "8784675d6c4439fc430488fd53fb1d48a674c5335ea5a0415083729eb1f2f9e8", "fa650723e59ecff6d63c0104ad68e0a6a75b4a892f43af1d45cc0f06d84353bd", "b9e538b7d1bdbaa71f97ee22e2d5478b0372e5a46d43dc66d99aefcd81d8a9f9", "1520431a6ae0f9f2095ea72febdbd453114f637d3ef32bd9240d723b7b60716d", "4bed054bda0179e68043af280c4fa18158c3335ffce92d700722f6fe21c35e38", "82f36b0f01bdfddc2c6d71c71aa2275ef75cf9a2949c028c995fef91d4c0ede4", "aefa0375350f1869429444b6ac0207d4e0a4324318778814b53215e518cb180c", "e512970b3b77a49220435dc034d8c13484a8f93958f9910aeed34275dd89fed6", "d8c943d94b67f5346118b8b66421af680eda5e2cd112273634498c71a6885747", "c3cfdfb2b2e6d9c00646ecc8f2709fe27f8544e8580f0359c1ee381f61d6af3a", "25c5b08849357994e3a35cd40280a3df160d3e81d68a3c1cdb491ed2ea682e48", "40919931997e97c0de69172b8c27516a91ce0c123a74443408db63782ee58782", "bad4fc8bd8f2ad105e44d44ea32a8404944fe5f10c9062bdd3b66cd92977f033", "ce2d7ffc93ff6bca7b6d9fa94ab9a801759c364ee4ffd735aba520b8ecda48e1", "9b2b74584392fdf0e8dc85cf84da788616deeb8f9eda993049c17cc9bfc1a983", "a7b031fb70084d90444474a38700fad025cc3d8127a05e59f69785594c01787e", "8501b7f3bea81ff3b42d3e71bfb1c4d523341c6197131c2bf4580e19736ea7e5", "680e316671163a5fe78c7fd57c9b9f848ad303bd21c2eb9552702dd48861ee2c", "65393bfa39005a6a0e32e5c19b3c64d6497b8eb21dee6c7eba9473818a75dc35", "20c3a02b7342a2d09c29291d10069a9907c5dd5d4805b6a0657a33e3a50131fe", "d6875d956f7570da503cf28d51e5978966488ced1a3f83f39e273d49ffadad86", "5e28568715b3097cec288ff51b545e9395a6d03d4e6a5f7b9d7475f0f50a15c6", "a0960e5fb7a422a97ad25dd92e018f60ed9218cb6ef831610fa8c449bc1c095f", "699d05ff5b7a9353aced49c0f07eac6b7a17a9ac1736e64c719336f169fa561b", "bfb85d0e8333933d554f6dfc270e742605c97504bcd219d2bfba2b1f3e05d4da", "acd0b49f695017b0f95d1496ad93bf3417b94493d7aac9a7c2a09df116f379c5", "3977639d79d6f8173194562a579967e5c90f83dbf6a3f69dc112dfb9a42ba5c7"]
#list_of_model_subfolder_names = ["9d2ca5ae847afe88c7f97b5678852e3f7714caec9c52307233174be2b202c25a"]
folder_location = "D:\\project\\Social-Media-and-News-Article-Sentiment-Analysis-for-Stock-Market-Autotrading\\precalculated_assets\\predictive_model\\"
count = 0


def update_tracker_notepad_file(folder_path, folder_name, work_completed=False):
    #this function checks of the folder has a tracker notepad file inside and edits the files and reports back accordingly
    work_started_substring = "work_started_"
    work_completed_substring = "work_completed_"
    faulty_additional_assets_pickle = "faulty_additional_assets_pickle_"
    # crash out if a faulty pickle is detected
    try:
        with open(os.path.join(folder_path, folder_name, "additional_assets.pkl"), 'rb') as file:
            additional_assets = pickle.load(file)
    except:
        with open(os.path.join(folder_path, folder_name, f'{faulty_additional_assets_pickle}{datetime.now().strftime("%Y%m%d_%H%M%S")}'), 'w') as f:
            f.write("BLANK FILE")
        print("faulty pickle detected")
        return True


    # if there is a tracker file there, just report back there is a tracker file
    if work_completed==False:
        files = os.listdir(os.path.join(folder_path, folder_name))
        for file in files:
            if file.startswith(work_started_substring) or file.startswith(work_completed_substring) or file.startswith(faulty_additional_assets_pickle):
                return True    
        with open(os.path.join(folder_path, folder_name, f'{work_started_substring}{datetime.now().strftime("%Y%m%d_%H%M%S")}'), 'w') as f:
            f.write("BLANK FILE")
        return False
    elif work_completed==True:
        files = os.listdir(folder_path)
        for file in files:
            if file.startswith(work_started_substring):
                os.remove(os.path.join(folder_path, folder_name, str(file)))
        with open(os.path.join(folder_path, folder_name, f'{work_completed_substring}{datetime.now().strftime("%Y%m%d_%H%M%S")}'), 'w') as f:
            f.write("BLANK FILE")
        return True
                




for folder_name in list_of_model_subfolder_names:
    print(folder_name)
    work_started = update_tracker_notepad_file(folder_location, folder_name)
    #work_started = False
    if work_started == False:
        with open(os.path.join(folder_location, folder_name, "input_dict.pkl"), 'rb') as file:
            input_dict = pickle.load(file)
        #with open(os.path.join(folder_location, folder_name, "additional_assets.pkl"), 'rb') as file:
        #    additional_assets = pickle.load(file)
        print("hello")

        temporal_params_dict     = input_dict["temporal_params_dict"]
        fin_inputs_params_dict   = input_dict["fin_inputs_params_dict"]
        senti_inputs_params_dict = input_dict["senti_inputs_params_dict"]
        outputs_params_dict      = input_dict["outputs_params_dict"]
        model_hyper_params       = input_dict["model_hyper_params"]
        reporting_dict           = input_dict["reporting_dict"]

        df_financial_data = FG_model_training.import_financial_data(
            target_file_path          = fin_inputs_params_dict["historical_file"], 
            #target_file_path          = "C:\\Users\\Public\\fabio_uni_work\\Social-Media-and-News-Article-Sentiment-Analysis-for-Stock-Market-Autotrading\\data\\financial_data\\firstratedata\\AAPL_full_5min_adjsplit.txt",
            input_cols_to_include_list  = fin_inputs_params_dict["cols_list"],
            temporal_params_dict = temporal_params_dict, training_or_testing="training")
        print(datetime.now().strftime("%H:%M:%S") + " - populate_technical_indicators")
        df_financial_data = FG_model_training.retrieve_or_generate_then_populate_technical_indicators(df_financial_data, fin_inputs_params_dict["fin_indi"], fin_inputs_params_dict["fin_match"]["Doji"], fin_inputs_params_dict["historical_file"], fin_inputs_params_dict["financial_value_scaling"])

        if senti_inputs_params_dict["topic_qty"] >= 1:
            #sentiment data prep
            print(datetime.now().strftime("%H:%M:%S") + " - importing or prepping sentiment data")
            senti_inputs_params_dict["tweet_file_location"] = "C:\\Users\\Public\\fabio_uni_work\\Social-Media-and-News-Article-Sentiment-Analysis-for-Stock-Market-Autotrading\\data\\twitter_data\\apple.csv"
            df_sentiment_data = FG_model_training.retrieve_or_generate_sentiment_data(df_financial_data.index, temporal_params_dict, fin_inputs_params_dict, senti_inputs_params_dict, outputs_params_dict, model_hyper_params, training_or_testing="training")
        elif senti_inputs_params_dict["topic_qty"] == 0:
            df_sentiment_data = None

        #model training - create regressors
        X_train, y_train   = FG_model_training.create_step_responces(df_financial_data, df_sentiment_data, pred_output_and_tickers_combos_list = outputs_params_dict["output_symbol_indicators_tuple"], pred_steps_ahead=outputs_params_dict["pred_steps_ahead"], financial_value_scaling=fin_inputs_params_dict["financial_value_scaling"])
        # reload old completed or semi-completed model if it already exists
        predictor_folder_location_string = global_precalculated_assets_locations_dict["root"] + global_precalculated_assets_locations_dict["predictive_model"]
        predictor_name = FG_model_training.return_predictor_name(FG_model_training.return_input_dict(temporal_params_dict = temporal_params_dict, fin_inputs_params_dict = fin_inputs_params_dict, senti_inputs_params_dict = senti_inputs_params_dict, outputs_params_dict = outputs_params_dict, model_hyper_params = model_hyper_params, reporting_dict = reporting_dict))
        predictor_location_folder_path = predictor_folder_location_string + FG_model_training.custom_hash(predictor_name) + "//"
        if os.path.exists(predictor_location_folder_path):
            model = FG_model_training.retrieve_model(predictor_location_folder_path, temporal_params_dict, fin_inputs_params_dict, senti_inputs_params_dict, outputs_params_dict, model_hyper_params, reporting_dict)
        else:
            raise ValueError("estimator not found" + str(count) + " " + str(predictor_name) + " " + str(FG_model_training.custom_hash(predictor_name)))
        model = FG_model_training.pop_scaler_if_required(model, X_train)
        #a = list(model.additional_validation_dict["results_x_mins_weighted"].keys())[0]
        #print(model.additional_validation_dict["results_x_mins_weighted"][a][0.9])
        print(len(model.estimators_))
        model, training_scores_dict, validation_scores_dict, additional_validation_dict = model.regenerate_validation_scores(X_train, y_train)
        #print(model.additional_validation_dict["results_x_mins_weighted"][a][0.9])
        update_tracker_notepad_file(os.path.join(folder_location, folder_name), work_completed=True)
        print(datetime.now().strftime("%H:%M:%S") + " - " + str(count) + " - XXXXXXXXXXXXXXXXXXXX")